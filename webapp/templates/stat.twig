{% extends 'layout.twig' %}

{% set columns2 = true %}
    
{% block extraHead %}
<link rel="stylesheet" type="text/css" href="/node_modules/jqplot/jquery.jqplot.min.css" />

<script language="javascript" type="text/javascript" src="/node_modules/jqplot/jquery.jqplot.min.js"></script>
<script type="text/javascript" src="/js/jqplot.barRenderer.js"></script>
<script type="text/javascript" src="/node_modules/jqplot/jqplot.highlighter.js"></script>
<script type="text/javascript" src="/node_modules/jqplot/jqplot.cursor.js"></script>
<script type="text/javascript" src="/js/jqplot.pointLabels.js"></script>
<script type="text/javascript" src="/js/jqplot.dateAxisRenderer.js"></script>
<script type="text/javascript" src="/js/jqplot.logAxisRenderer.js"></script>


    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.3/dist/leaflet.css"
    integrity="sha256-kLaT2GOSpHechhsozzB+flnD+zUyjE2LlfWPgU04xyI=" crossorigin="" />
    <script src="https://unpkg.com/leaflet@1.9.3/dist/leaflet.js"
    integrity="sha256-WBkoXOwTeyKclOHuWtc+i2uENFpDZ9YPdf5Hf+D7ewM=" crossorigin=""></script>
    <style>
        #map { width: 100%; height: 400px; }
        #map-massrightnow { width: 100%; height: 400px; }
        body { font: 16px/1.4 "Helvetica Neue", Arial, sans-serif; }
        .ghbtns { position: relative; top: 4px; margin-left: 5px; }
    </style>


{% endblock %}


{% block content %}

    {% if user.isadmin %}
    
    <h3>Helyadatok</h3>
    <script src="https://leaflet.github.io/Leaflet.heat/dist/leaflet-heat.js"></script>
    
    <h5>Minden helyadat</h5>
    <p>Az API/NearBy az elmúlt időben {{ stats.nearbylog|length }} db helyadatot gyűjtött. </p>
    <div id="map"></div>    
    <script>

        var map = L.map('map').setView([47.1625, 19.5033], 7);
        var tiles = L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: '&copy; <a href="https://osm.org/copyright">OpenStreetMap</a> contributors',
        }).addTo(map);

        var nearbyLogPoints = {{ stats.nearbylog|json_encode()|raw }};
        var heat = L.heatLayer(nearbyLogPoints, {
                radius: 50,
                blur: 15
            
                }).addTo(map);

    </script>

    <h5>Mise alatt és után</h5>
    <p>Az API/MassRightNow az elmúlt időben {{ stats.massrightnowlog|length }} db helyadatot gyűjtött. </p>
    <div id="map-massrightnow"></div>    
    <script>

        var mapMassRightNow = L.map('map-massrightnow').setView([47.1625, 19.5033], 7);
        var tilesMassRightNow = L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: '&copy; <a href="https://osm.org/copyright">OpenStreetMap</a> contributors',
        }).addTo(mapMassRightNow);

        var massRightNowLogPoints = {{ stats.massrightnowlog|json_encode()|raw }};
        var heatMassRightNow = L.heatLayer(massRightNowLogPoints, {
            radius: 20,
            maxZoom: 0.15,
            blur: 20,
            max: 10.0
            }).addTo(mapMassRightNow);

        </script>
    {% endif %}


    <h3>Templom statisztikák</h3>    
    {{ stats.chart_templomaink.html|raw }}
	{{ stats.chartN.html|raw }}
	
    {% if s3.data[0]|length > 1 %}{{ stats['chartN'].title }}{% endif %}
    <div id="chart4" style="margin-top: 20px; margin-left: 20px; width: 100%; height: 300px; position: relative;" class="jqplot-target"></div>
    
	<h3>Magyarországi (!) aktív (!) templomok (!) frissítettségi statisztikája:</h3>
	<p>Kevesebb mint egy éves adattal rendelkező magyarországi templom: <strong>{{ magyar[0].count }} db = {{ magyar[0].percent }}%</strong></p>
	<p>Kevesebb mint két éves adattal rendelkező magyarországi templom: <strong>{{ magyar[0].count + magyar[1].count }} db = {{ magyar[0].percent + magyar[1].percent }}%</strong></p>
	<div id="stat">
	{% for stat in magyar %}
		{% if stat.percent > 1 %}
			<div style="width:{{ stat.percent }}%;text-align:center;overflow:hidden;float:left;background-color:rgb({{stat.rgb[0]}},{{stat.rgb[1]}},{{stat.rgb[2]}});" title="{{ stat.count }} db = {{stat.percent}}%">{{ stat.yearago }}&nbsp;éves</div>
		{% endif %}
	{% endfor %}
	</div><br/>
	
	<h3>Akadálymentesség</h3>
	Akadálymentességi információval rendelkező misézőhelyek száma: <strong>{{ accessibility.churches|length }}</strong>
	
	<table class="table">
	{% for name,tag in accessibility.tags %}
	<tr><td colspan=2><strong>{{ name }}</td></tr>
		{% for value, count in tag %}
			<tr><td>{{ value }}</td><td>{{ count }}</td></tr>
		{% endfor %}
	{% endfor%}
	</table>
	
	
	<h3>OSM statisztika</h3>
	
	<table class="table table-hover table-condensed table-striped">
	<tr>
		<th class="col-md-3">name</th>
		<th class="col-md-2">count</th>
		<th >distinct</th>
		<th class="col-md-1">sql</th>
	</tr>
	{% set count = 0 %}
	{% for osmtag in osmtags %}
		{% set count = count + 1 %}
	<tr>
		<td><a href="https://taginfo.openstreetmap.org/keys/{{ osmtag.name }}">{{ osmtag.name }}</a></td>
		<td>{{ osmtag.count }}</td>
		<td>
			{% if osmtag.dist == 1 %} 
				{% set value = (osmtag.values)|first %}
				{% if value.churches|length > 1 %}
					<a href="{{ value.overpassturbo }}" target="_blank">
				{% else %}
					{% set church = (value.churches)|first %}
					<a href="https://openstreetmap.org/{{ church.osmtype }}/{{ church.osmid }}" target="_blank"> {{church.names.0 }}
				{% endif %}
				{{ value.value }}</a>
																	
			{% else %}
				(<a href="#" onclick="return false;"><span data-bs-toggle="collapse" data-bs-target="#collapse{{ count }}" aria-expanded="false" aria-controls="collapse{{ count }}">{{ osmtag.dist }}</span></a>)
				<br/>
				<div class="collapse collapse-horizontal" id="collapse{{ count }}">
				{% for value in osmtag.values %}
					{% if value.churches|length > 1 %}
						<a href="{{ value.overpassturbo }}" target="_blank">
					{% else %}
						{% set church = (value.churches)|first %}
						<a href="https://openstreetmap.org/{{ church.osmtype }}/{{ church.osmid }}" target="_blank"> {{church.names.0 }}
					{% endif %}
					{{ value.value }}</a> ({{ value.churches|length }})<br/>
				{% endfor %}
				</div>
			{% endif %}  
		
		</td>
		<td><a href="{{ osmtag.overpassturbo }}">overpass</a></td>
		
		
		
		
		

		
	</tr>
	{% endfor %}
	</table>
		
				
	
    <h3>Egyéb statisztikák</h3>
    <div id="chart5" style="margin-top: 20px; margin-left: 20px; width: 100%; height: 300px; position: relative;" class="jqplot-target"></div>
	<div id="chart3" style="margin-top: 20px; margin-left: 20px; width: 100%; height: 300px; position: relative;" class="jqplot-target"></div>
	Felhasználók, akik még soha nem léptek be (a 2015 óta működő új honlapra): <strong>{{ s2.early }}</strong>

    <script>
    $(document).ready(function () {
        
    var grid = {
              drawBorder: false,
              shadow: false,
              // background: 'rgba(0,0,0,0)'  works to make transparent.
              background: 'white'
          };
    var highlighter = {
            show: true, 
            showLabel: true, 
            tooltipAxes: 'y',
            sizeAdjust: 7.5 , tooltipLocation : 'ne'
        };
    var legend = {
              show: true,
              renderer: $.jqplot.EnhancedLegendRenderer,
              placement: "insideGrid",
              labels: false,
              location: "ne",
              rowSpacing: "2px",
              rendererOptions: {
                  // set to true to replot when toggling series on/off
                  // set to an options object to pass in replot options.
                  seriesToggle: 'normal',
                  seriesToggleReplot: {resetAxes: true}
              }
          };
    var seriesDefaults = {
              showMarker: false
          };
        
		{% for stat in stats %}
			{{ stat.script|raw }}
		{% endfor %}
		
    
   
   plot4 = $.jqplot("chart4", [{{ s4.data|json_encode()|raw }}], {
        // Turns on animatino for all series in this plot.
        animate: true,
        // Will animate plot on calls to plot1.replot({resetAxes:true})
        animateReplot: true,
        title: 'Felhasználónként mennyi templomot tartanak karban',      
        axesDefaults: {
            pad: 0
        },
        axes: {
            // These options will set up the x axis like a category axis.
            xaxis: {
                label: 'Gondozott templomok száma',
                renderer: $.jqplot.LogAxisRenderer,
                tickInterval: 100,
                drawMajorGridlines: true,
                drawMinorGridlines: true,
                drawMajorTickMarks: true,
                rendererOptions: {
                    tickInset: 0.5,
                    minorTicks: 1,                
                }
            },
            yaxis: {
                label: "Felhasználók száma",
                tickOptions: {
                    formatString: "%'d"
                },
                rendererOptions: {
                    forceTickAt0: true
                }

            }
        },
        highlighter: highlighter,
        grid: grid,
    });
   
    
      var data = {{ s5.data|json_encode()|raw }};
      legend['labels'] = {{ s5.labels|json_encode()|raw }};

      // make the plot
      plot5 = $.jqplot("chart5", data, {
          title: "Külső API-khoz intézett lekérések",
          animate: true,
          axesDefaults: {
               labelRenderer: $.jqplot.CanvasAxisLabelRenderer 
          },
          seriesDefaults: seriesDefaults,
          legend: legend,
          axes: {
              xaxis: {
                label: "",                  
                renderer: $.jqplot.DateAxisRenderer,
                tickOptions:{formatString:'%Y.%m.%d.'},
                tickInterval:'1 day',
                /*  min:dates[0],
                max:dates[dates.length-1],
                tickInterval: '1 day',                  
                */                  
              },
              yaxis: {
                  label: '',                 
              }
          },
          grid: grid,
          legend: legend,
          highlighter: highlighter,
      });


	legend['labels'] = {{ s2.labels|json_encode()|raw }};   
    plot1 = $.jqplot("chart3", {{ s2.data|json_encode()|raw }}, {
        // Turns on animatino for all series in this plot.
        animate: true,
        // Will animate plot on calls to plot1.replot({resetAxes:true})
        animateReplot: true,
        seriesDefaults: seriesDefaults,
        title: 'Felhasználóink utolsó aktivitásai (2015 óta)',
        series:[
            {
                pointLabels: {
                    show: true
                },
                renderer: $.jqplot.BarRenderer,
                showHighlight: false,
                yaxis: 'y2axis',
                rendererOptions: {
                    // Speed up the animation a little bit.
                    // This is a number of milliseconds.  
                    // Default for bar series is 3000.  
                    animation: {
                        speed: 2500
                    },
                    barWidth: 15,
                    barPadding: -15,
                    barMargin: 0,
                    highlightMouseOver: false
                }
            }, 
            {
                rendererOptions: {
                    // speed up the animation a little bit.
                    // This is a number of milliseconds.
                    // Default for a line series is 2500.
                    animation: {
                        speed: 2000
                    }
                }
            }
        ],
        axesDefaults: {
            pad: 0
        },
        axes: {
            // These options will set up the x axis like a category axis.
            xaxis: {
                tickInterval: 1,
                drawMajorGridlines: false,
                drawMinorGridlines: true,
                drawMajorTickMarks: false,
                rendererOptions: {
                    tickInset: 0.5,
                    minorTicks: 1
                }
            },
            yaxis: {
                tickOptions: {
                    formatString: "%'d"
                },
                rendererOptions: {
                    forceTickAt0: true
                }
            },
            y2axis: {
                tickOptions: {
                    formatString: "%'d"
                },
                rendererOptions: {
                    // align the ticks on the y2 axis with the y axis.
                    alignTicks: true,
                    forceTickAt0: true
                }
            }
        },
        highlighter: highlighter,
        legend: legend,
        grid: grid,
    });
   

});




    </script>
    {% endblock%}