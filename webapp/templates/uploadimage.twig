{% extends "layout_simpliest.twig" %}

{% block extraHead %}
    <script type='text/javascript' src='/js/jquery.form.js'></script>
    <script type='text/javascript'>
        $(document).ready(function () {
            var options = {
                beforeSubmit: beforeSubmit, // pre-submit callback 
                success: afterSuccess, // post-submit callback 
                error: onError, // error callback
                uploadProgress: OnProgress, //upload progress callback 
                resetForm: true,        // reset the form after successful submit 
                timeout: 60000, // 60 seconds timeout
                dataType: 'json', // expect JSON response
                headers: {
                    'X-Requested-With': 'XMLHttpRequest'
                }
            };

            $('#MyUploadForm').submit(function () {
                // Store upload start time for speed calculation
                window.uploadStartTime = Date.now();
                $(this).ajaxSubmit(options);
                // always return false to prevent standard browser submit and page navigation 
                return false;
            });


            //function after succesful file upload (when server response)
            function afterSuccess(responseData, statusText, xhr, form)
            {
                $('#submit-btn').show(); //show submit button
                $('#loading-img').hide(); //hide loading image
                $('#progressbox').delay(1000).fadeOut(); //hide progress bar
                
                if (responseData && responseData.success) {
                    // Display success message with uploaded image
                    $('#output').html(responseData.html)
                             .addClass('alert-success')
                             .removeClass('alert-warning alert-danger')
                             .show();
                    
                    console.log('Upload successful:', {
                        message: responseData.message,
                        imageUrl: responseData.image_url,
                        photoId: responseData.photo_id,
                        statusText: statusText,
                        status: xhr.status
                    });
                } else {
                    // Handle unexpected response format
                    $('#output').html('<strong>Váratlan szerver válasz:</strong><br/>' + 
                                    (responseData.message || 'Ismeretlen hiba történt.'))
                             .addClass('alert-warning')
                             .removeClass('alert-success alert-danger')
                             .show();
                }
            }

            //detailed error handling function
            function onError(xhr, status, error) {
                $('#submit-btn').show(); //show submit button again
                $('#loading-img').hide(); //hide loading image
                $('#progressbox').hide(); //hide progress bar
                
                var errorMessage = '<strong>Hiba történt a feltöltés során:</strong><br/>';
                
                // Check different error types
                if (xhr.status === 0) {
                    errorMessage += 'Hálózati kapcsolat megszakadt. Ellenőrizze az internetkapcsolatot!';
                } else if (xhr.status == 404) {
                    errorMessage += 'A szerver nem található (404). Kérjük, próbálja újra később!';
                } else if (xhr.status == 500) {
                    errorMessage += 'Szerver hiba (500). A szerver nem tudta feldolgozni a kérést.';
                } else if (xhr.status == 413) {
                    errorMessage += 'A fájl túl nagy (413). Próbáljon kisebb méretű fájlt feltölteni!';
                } else if (xhr.status == 415) {
                    errorMessage += 'Nem támogatott fájltípus (415). Csak JPEG formátumú képek engedélyezettek!';
                } else if (status === 'timeout') {
                    errorMessage += 'Időtúllépés történt. A feltöltés túl sokáig tartott, próbálja újra!';
                } else if (status === 'abort') {
                    errorMessage += 'A feltöltés megszakítva.';
                } else if (status === 'parsererror') {
                    errorMessage += 'A szerver válasza nem valid JSON formátum.<br/>';
                    
                    // Try to parse the response to get error details
                    if (xhr.responseText) {
                        try {
                            var response = JSON.parse(xhr.responseText);
                            if (response.text) {
                                errorMessage += '<strong>Hibaüzenet:</strong> ' + response.text + '<br/>';
                            } else if (response.error) {
                                errorMessage += '<strong>Hiba:</strong> ' + response.error + '<br/>';
                            }
                            if (response.message) {
                                errorMessage += '<strong>Üzenet:</strong> ' + response.message + '<br/>';
                            }
                        } catch (e) {
                            errorMessage += 'Ez általában szerver oldali PHP hiba miatt történik.<br/>';
                            errorMessage += '<strong>Szerver válasz:</strong><br/>';
                            errorMessage += '<pre style="max-height: 200px; overflow-y: auto; font-size: 12px;">' + 
                                           xhr.responseText.substring(0, 1000) + '</pre>';
                            if (xhr.responseText.length > 1000) {
                                errorMessage += '<em>... (csonkolva)</em>';
                            }
                        }
                    }
                } else {
                    errorMessage += 'Ismeretlen hiba történt.<br/>';
                    errorMessage += '<strong>Státusz:</strong> ' + status + '<br/>';
                    errorMessage += '<strong>HTTP kód:</strong> ' + xhr.status + '<br/>';
                    errorMessage += '<strong>Hibaüzenet:</strong> ' + error;
                    
                    // Try to get more details from response
                    if (xhr.responseText) {
                        try {
                            var response = JSON.parse(xhr.responseText);
                            if (response.text) {
                                errorMessage += '<br/><strong>Részletes hibaüzenet:</strong> ' + response.text;
                            } else if (response.error) {
                                errorMessage += '<br/><strong>Részletek:</strong> ' + response.error;
                            }
                            if (response.message) {
                                errorMessage += '<br/><strong>Üzenet:</strong> ' + response.message;
                            }
                            if (response.debug_info) {
                                console.log("Debug info:", response.debug_info);
                                errorMessage += '<br/><small><em>További debug információ a konzolban.</em></small>';
                            }
                        } catch (e) {
                            // If not JSON, show first 200 characters of response
                            if (xhr.responseText.length > 0) {
                                errorMessage += '<br/><strong>Szerver válasz:</strong> ' + xhr.responseText.substring(0, 200);
                                if (xhr.responseText.length > 200) {
                                    errorMessage += '...';
                                }
                            }
                        }
                    }
                }
                
                $('#output').html(errorMessage).show();
                
                // Generate detailed error report for debugging
                var errorReport = generateErrorReport();
                errorReport.errorDetails = {
                    status: xhr.status,
                    statusText: status,
                    error: error,
                    responseText: xhr.responseText
                };
                
                console.error('Upload error:', errorReport);
            }

            // Function to generate detailed debug information for errors
            function generateErrorReport() {
                var file = $('#FileInput')[0].files[0];
                var report = {
                    timestamp: new Date().toISOString(),
                    browser: {
                        userAgent: navigator.userAgent,
                        platform: navigator.platform,
                        language: navigator.language,
                        cookieEnabled: navigator.cookieEnabled,
                        onLine: navigator.onLine
                    },
                    file: file ? {
                        name: file.name,
                        size: file.size,
                        type: file.type,
                        lastModified: new Date(file.lastModified).toISOString()
                    } : null,
                    form: {
                        churchId: $('input[name="id"]').val(),
                        description: $('input[name="description"]').val()
                    },
                    connection: {
                        effectiveType: navigator.connection ? navigator.connection.effectiveType : 'unknown',
                        downlink: navigator.connection ? navigator.connection.downlink : 'unknown'
                    }
                };
                
                console.log('Error Report:', report);
                return report;
            }

            //function to check file size before uploading.
            function beforeSubmit() {
                console.log('Validating file before upload...');
                //check whether browser fully supports all File API
                if (window.File && window.FileReader && window.FileList && window.Blob)
                {
                    if (!$('#FileInput').val()) //check empty input filed
                    {
                        $('#output').html('<strong>Hiba:</strong> Nincs fájl megadva. Kérjük válasszon egy feltöltendő fájlt!').show();
                        return false
                    }

                    var file = $('#FileInput')[0].files[0];
                    var fsize = file.size; //get file size
                    var ftype = file.type; // get file type
                    var fname = file.name; // get file name

                    console.log('File details:', {
                        name: fname,
                        size: fsize,
                        type: ftype,
                        lastModified: new Date(file.lastModified)
                    });

                    //allow file types 
                    switch (ftype)
                    {
                        /* case 'image/png': 
                         case 'image/gif': */
                        case 'image/jpeg':
                            /*case 'image/pjpeg':
                             case 'text/plain':
                             case 'text/html':
                             case 'application/x-zip-compressed':
                             case 'application/pdf':
                             case 'application/msword':
                             case 'application/vnd.ms-excel':
                             case 'video/mp4':*/
                            break;
                        default:
                            var supportedFormats = 'JPEG (.jpg, .jpeg)';
                            $('#output').html('<strong>Nem támogatott fájlformátum!</strong><br/>' +
                                '<strong>Választott fájl:</strong> ' + fname + '<br/>' +
                                '<strong>Fájltípus:</strong> ' + (ftype || 'ismeretlen') + '<br/>' +
                                '<strong>Támogatott formátumok:</strong> ' + supportedFormats + '<br/>' +
                                'Kérjük válasszon JPEG formátumú képfájlt!').show();
                            return false
                    }

                    //Check file size against PHP limits
                    var maxSizeBytes = {{ uploadLimits.final_limit_bytes }};
                    var maxSizeMB = {{ uploadLimits.final_limit_mb }};
                    
                    if (fsize > maxSizeBytes)
                    {
                        $('#output').html('<strong>Túl nagy fájl!</strong><br/>' +
                            '<strong>Választott fájl:</strong> ' + fname + '<br/>' +
                            '<strong>Fájlméret:</strong> ' + bytesToSize(fsize) + '<br/>' +
                            '<strong>Maximum méret:</strong> ' + maxSizeMB + ' MB<br/>' +
                            'Kérjük válasszon kisebb méretű fájlt vagy tömörítse a képet!').show();
                        return false
                    }

                    $('#submit-btn').hide(); //hide submit button
                    $('#loading-img').show(); //show loading image
                    $('#output').html('').hide();
                    
                    console.log('File validation passed, starting upload...');
                } else
                {
                    //Output error to older unsupported browsers that doesn't support HTML5 File API
                    var browserInfo = 'Böngésző: ' + navigator.userAgent;
                    $('#output').html('<strong>Elavult böngésző!</strong><br/>' +
                        'A böngészője nem támogatja a fájlfeltöltést.<br/>' +
                        browserInfo + '<br/>' +
                        'Kérjük frissítse a böngészőjét a legújabb verzióra!').show();
                    return false;
                }
            }

            //progress bar function
            function OnProgress(event, position, total, percentComplete)
            {
                //Progress bar
                $('#progress').show();
                $('#progressbox').show();
                $('#progressbar').width(percentComplete + '%') //update progressbar percent complete
                
                // Calculate and show detailed progress info
                var uploadedMB = (position / 1024 / 1024).toFixed(2);
                var totalMB = (total / 1024 / 1024).toFixed(2);
                var speedKBps = 0;
                
                // Calculate upload speed if we have timing info
                if (window.uploadStartTime && position > 0) {
                    var elapsedTime = (Date.now() - window.uploadStartTime) / 1000; // seconds
                    speedKBps = Math.round((position / 1024) / elapsedTime);
                }
                
                var progressText = percentComplete + '%';
                if (total > 0) {
                    progressText += ' (' + uploadedMB + ' MB / ' + totalMB + ' MB)';
                    if (speedKBps > 0) {
                        progressText += ' - ' + speedKBps + ' KB/s';
                    }
                }
                
                $('#statustxt').html(progressText); //update status text
                
                if (percentComplete > 50)
                {
                    $('#statustxt').css('color', '#000'); //change status text to white after 50%
                }
                
                console.log('Upload progress:', {
                    percent: percentComplete,
                    position: position,
                    total: total,
                    speed: speedKBps + ' KB/s'
                });
            }

            //function to format bites bit.ly/19yoIPO
            function bytesToSize(bytes) {
                var sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];
                if (bytes == 0)
                    return '0 Bytes';
                var i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)));
                return Math.round(bytes / Math.pow(1024, i), 2) + ' ' + sizes[i];
            }

        });

    </script>
{% endblock %}

{% block pageHeader %}
    <div class="jumbotron">
        <h3>
            <a href="/templom/{{ church.id }}" target=_blank>{{ church.nev }}</a>
            <small><strong>{% if church.ismertnev %}{{ church.ismertnev }} - {% endif %}{{ church.varos }}</strong><br/>
                {{ pageDescription }}</small>
        </h3>
    </div>
{% endblock %}

{% block content %}
    <form method="post" enctype="multipart/form-data" id="MyUploadForm">
        <input type=hidden name=id class="form-control" value='{{ church.id }}'>
        <input type=hidden name=upload class="form-control" value='true'>

        <div class="row center">
            <div class="col-md-4">
                <label class="control-label">Feltöldendő kép: </label>
                <input class="form-control"  name="FileInput" id="FileInput" type="file" />

            </div>
            <div class="col-md-6">
                <label class="control-label">Leírás: </label><input class="form-control" type=text size=40 name=description class=urlap />
            </div>
            <div class="col-md-2">
                <br/>
                <button class="btn btn-default"  id="submit-btn" type="submit" >Feltölt</button>
            </div>
        </div>        
    </form>
    <br/>
    <center>
        <div class="alert alert-warning" style="display:none" id="progress">    
            <img src="/img/ajax-loader.gif" id="loading-img" style="display:none;" alt="Türelem, türelem..."/>

            <div id="progressbox" ><div id="progressbar"></div ><div id="statustxt">0%</div></div>
            
        </div>
        <div  class="alert alert-warning" id="output" style="display:none"></div>
    </center>
    <div class="alert alert-info">
        Kérjük kellően jó minőségű és méretű JPEG képet töltsön csak fel. Maximális méret: {{ uploadLimits.final_limit_mb }} MB
    </div>
{% endblock %}